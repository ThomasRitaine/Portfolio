name: "CD : Build, push then deploy image"

on:
  push:
    branches: ["main"]

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.ref_name }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image for ${{ matrix.platform }}
        uses: docker/build-push-action@v6
        with:
          context: .
          target: server
          push: true
          platforms: ${{ matrix.platform }}
          tags: ghcr.io/${{ github.repository }}:${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create multi-arch manifest
        uses: docker/manifest-action@v2
        with:
          images: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ steps.meta.outputs.sha }}

          manifests: |
            ghcr.io/${{ github.repository }}:linux/amd64
            ghcr.io/${{ github.repository }}:linux/arm64

      - name: SSH into VPS and deploy app
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER_NAME }}
          key: ${{ secrets.VPS_USER_KEY }}
          script_stop: true
          script: |
            cd ~/applications/portfolio
            curl -O -L https://raw.githubusercontent.com/ThomasRitaine/portfolio/main/docker-compose.prod.yml
            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d
            docker image prune -f
